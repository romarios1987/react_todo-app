{"version":3,"sources":["components/TodosFilter.js","components/TodoItem.js","components/TodoList.js","components/TodoInput.js","App.js","index.js"],"names":["linksList","name","label","TodosFilter","onFilterChange","filter","links","map","linkActive","key","href","onClick","className","TodoItem","id","title","completed","onToggleCompleted","onDeleted","type","checked","onChange","htmlFor","defaultProps","TodoList","todos","elements","TodoInput","props","placeholder","App","state","todoData","setState","idx","findIndex","el","oldItem","newItem","slice","onClearCompleted","todo","deleteItem","items","item","this","visibleData","completedCount","length","todoCount","disabled","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f49346e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst linksList = [\n  {\n    name: 'all', label: 'All',\n  },\n  {\n    name: 'active', label: 'Active',\n  },\n  {\n    name: 'completed', label: 'Completed',\n  },\n];\n\nconst TodosFilter = ({ onFilterChange, filter }) => {\n  const links = linksList.map(({ name, label }) => {\n    const isActive = filter === name;\n    const linkActive = isActive ? 'selected' : '';\n\n    return (\n      <li key={name}>\n        <a\n          href={`#/${name}`}\n          onClick={() => onFilterChange(name)}\n          className={linkActive}\n        >\n          {label}\n        </a>\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"filters\">\n      {links}\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ id, title, completed, onToggleCompleted, onDeleted }) => (\n  <>\n    <li className={completed ? 'completed' : 'view'}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={completed ? 'checked' : ''}\n          className=\"toggle\"\n          id={`todo-${id}`}\n          onChange={onToggleCompleted}\n        />\n        <label htmlFor={`todo-${id}`}>{title}</label>\n        <button type=\"button\" onClick={onDeleted} className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n  </>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool,\n  onToggleCompleted: PropTypes.func.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  completed: false,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, onToggleCompleted, onDeleted }) => {\n  const elements = todos.map(({ id, label, completed }) => (\n    <TodoItem\n      key={id}\n      id={id}\n      title={label}\n      completed={completed}\n      onToggleCompleted={() => onToggleCompleted(id)}\n      onDeleted={() => onDeleted(id)}\n    />\n  ));\n\n  return (\n    <ul className=\"todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    completed: PropTypes.bool,\n  })),\n  onToggleCompleted: PropTypes.func.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [{\n    completed: false,\n  }],\n};\n\nexport default TodoList;\n","import React from 'react';\n\nconst TodoInput = props => (\n  <input\n    className=\"new-todo\"\n    placeholder=\"What needs to be done?\"\n  />\n);\n\nexport default TodoInput;\n","import React, { Component } from 'react';\nimport TodosFilter from './components/TodosFilter';\nimport TodoList from './components/TodoList';\nimport TodoInput from './components/TodoInput';\n\nclass App extends Component {\n  state = {\n    todoData: [\n      {\n        id: 1, label: 'Todo 123', completed: true,\n      },\n      {\n        id: 2, label: 'Todo 124', completed: true,\n      },\n      {\n        id: 3, label: 'Todo 125', completed: false,\n      },\n    ],\n    filter: 'all', // all, active, completed\n  }\n\n  onToggleCompleted = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex(el => el.id === id);\n\n      const oldItem = todoData[idx];\n      const newItem = {\n        ...oldItem, completed: !oldItem.completed,\n      };\n\n      const newArray = [\n        ...todoData.slice(0, idx),\n        newItem,\n        ...todoData.slice(idx + 1),\n      ];\n\n      return { todoData: newArray };\n    });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  onClearCompleted = () => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.filter(todo => !todo.completed),\n    }));\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex(el => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\n      return { todoData: newArray };\n    });\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter(item => !item.completed);\n      case 'completed':\n        return items.filter(item => item.completed);\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const { todoData, filter } = this.state;\n\n    const visibleData = this.filter(todoData, filter);\n\n    const completedCount = todoData.filter(el => el.completed).length;\n    const todoCount = todoData.length - completedCount;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoInput />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={visibleData}\n            onToggleCompleted={this.onToggleCompleted}\n            onDeleted={this.deleteItem}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {todoCount}\n            {' '}\n            items left\n          </span>\n\n          <TodosFilter\n            onFilterChange={this.onFilterChange}\n            filter={filter}\n          />\n\n          <button\n            type=\"button\"\n            onClick={this.onClearCompleted}\n            className=\"clear-completed\"\n            disabled={completedCount ? '' : 'disabled'}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}