{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodoInput.js","utils/FilterUtils.js","components/TodosFilter.js","App.js","index.js"],"names":["TodoItem","id","title","completed","onToggleCompleted","onDeleted","className","type","checked","onChange","htmlFor","onClick","defaultProps","TodoList","todos","elements","map","label","key","TodoInput","state","onLabelChange","event","target","value","trim","setState","handleInputKeyDown","keyCode","props","onItemAdded","placeholder","this","onKeyDown","Component","FILTER","ALL","ACTIVE","COMPLETED","filterUtils","filters","name","href","TodosFilter","onFilterChange","filter","links","linkActive","App","todoData","todo","onClearCompleted","addItem","text","newItem","uuidv4","deleteItem","idx","findIndex","el","slice","onToggleAllCompleted","filterTodos","items","item","visibleData","completedCount","length","todoCount","allChecked","every","disabled","ReactDOM","render","document","getElementById"],"mappings":"4QAGMA,EAAW,SAAC,GAAD,IACfC,EADe,EACfA,GAAIC,EADW,EACXA,MAAOC,EADI,EACJA,UACXC,EAFe,EAEfA,kBAAmBC,EAFJ,EAEIA,UAFJ,OAIf,oCACE,wBAAIC,UAAWH,EAAY,YAAc,QACvC,yBAAKG,UAAU,QACb,2BACEC,KAAK,WACLC,QAASL,EAAY,UAAY,GACjCG,UAAU,SACVL,GAAE,eAAUA,GACZQ,SAAUL,IAEZ,2BAAOM,QAAO,eAAUT,IAAOC,GAC/B,4BAAQK,KAAK,SAASI,QAASN,EAAWC,UAAU,aAEtD,2BAAOC,KAAK,OAAOD,UAAU,YAcnCN,EAASY,aAAe,CACtBT,WAAW,GAGEH,QClCTa,EAAW,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOV,EAAmC,EAAnCA,kBAAmBC,EAAgB,EAAhBA,UACtCU,EAAWD,EAAME,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAOd,EAAd,EAAcA,UAAd,OACzB,kBAAC,EAAD,CACEe,IAAKjB,EACLA,GAAIA,EACJC,MAAOe,EACPd,UAAWA,EACXC,kBAAmB,kBAAMA,EAAkBH,IAC3CI,UAAW,kBAAMA,EAAUJ,SAI/B,OACE,wBAAIK,UAAU,aACXS,IAePF,EAASD,aAAe,CACtBE,MAAO,CAAC,CACNX,WAAW,KAIAU,QCGAM,E,4MAtCbC,MAAQ,CACNH,MAAO,I,EAGTI,cAAgB,SAACC,GACVA,EAAMC,OAAOC,MAAMC,OAMxB,EAAKC,SAAS,CAAET,MAAOK,EAAMC,OAAOC,QALlC,EAAKE,SAAS,CAAET,MAAO,M,EAQ3BU,mBAAqB,SAACL,GACE,KAAlBA,EAAMM,SAAuC,KAArB,EAAKR,MAAMH,QACrC,EAAKY,MAAMC,YAAY,EAAKV,MAAMH,OAClC,EAAKS,SAAS,CAAET,MAAO,O,uDAKzB,OACE,2BACEX,UAAU,WACVyB,YAAY,yBACZP,MAAOQ,KAAKZ,MAAMH,MAClBR,SAAUuB,KAAKX,cACfY,UAAWD,KAAKL,yB,GA7BAO,aCHlBC,EAAS,CACbC,IAAK,MACLC,OAAQ,SACRC,UAAW,aAeAC,EAAc,CACzBJ,SACAK,QAdc,CACd,CACEC,KAAMN,EAAOC,IAAKM,KAAM,KAAMzB,MAAO,OAEvC,CACEwB,KAAMN,EAAOE,OAAQK,KAAM,WAAYzB,MAAO,UAEhD,CACEwB,KAAMN,EAAOG,UAAWI,KAAM,cAAezB,MAAO,eCoBzC0B,EA9BK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC/BC,EAAQP,EAAYC,QAAQxB,KAAI,YAA4B,IAAzByB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMzB,EAAY,EAAZA,MAE7C8B,EADWF,IAAWJ,EACE,WAAa,GAE3C,OACE,wBAAIvB,IAAKuB,GACP,uBACEC,KAAMA,EACN/B,QAAS,kBAAMiC,EAAeH,IAC9BnC,UAAWyC,GAEV9B,OAMT,OACE,wBAAIX,UAAU,WACXwC,IC4HQE,E,4MA5Ib5B,MAAQ,CACN6B,SAAU,GACVJ,OAAQN,EAAYJ,OAAOC,K,EAG7BhC,kBAAoB,SAACH,GACnB,EAAKyB,UAAS,kBAAmB,CAC/BuB,SADY,EAAGA,SACIjC,KAAI,SAACkC,GACtB,OAAIA,EAAKjD,KAAOA,EACPiD,EAGF,2BACFA,GADL,IAEE/C,WAAY+C,EAAK/C,oB,EAMzByC,eAAiB,SAACC,GAChB,EAAKnB,SAAS,CAAEmB,Y,EAGlBM,iBAAmB,WACjB,EAAKzB,UAAS,kBAAmB,CAC/BuB,SADY,EAAGA,SACIJ,QAAO,SAAAK,GAAI,OAAKA,EAAK/C,kB,EAI5CiD,QAAU,SAACC,GACT,IAAMC,EAAU,CACdrD,GAAIsD,cACJtC,MAAOoC,EACPlD,WAAW,GAGb,EAAKuB,UAAS,YAAmB,IAAhBuB,EAAe,EAAfA,SAGf,MAAO,CAAEA,SAFG,sBAAOA,GAAP,CAAiBK,S,EAMjCE,WAAa,SAACvD,GACZ,EAAKyB,UAAS,YAAmB,IAAhBuB,EAAe,EAAfA,SACTQ,EAAMR,EAASS,WAAU,SAAAC,GAAE,OAAIA,EAAG1D,KAAOA,KAI/C,MAAO,CAAEgD,SAFK,sBAAOA,EAASW,MAAM,EAAGH,IAAzB,YAAkCR,EAASW,MAAMH,EAAM,U,EAMzEI,qBAAsB,YAAiB,IAAdtC,EAAa,EAAbA,OACvB,EAAKG,UAAS,kBAAmB,CAC/BuB,SADY,EAAGA,SACIjC,KAAI,SAAAkC,GAAI,kCACtBA,GADsB,IAEzB/C,UAAWoB,EAAOf,kB,EAKxBsD,YAAc,SAACC,EAAOlB,GACpB,OAAQA,GACN,KAAKN,EAAYJ,OAAOC,IACtB,OAAO2B,EACT,KAAKxB,EAAYJ,OAAOE,OACtB,OAAO0B,EAAMlB,QAAO,SAAAmB,GAAI,OAAKA,EAAK7D,aACpC,KAAKoC,EAAYJ,OAAOG,UACtB,OAAOyB,EAAMlB,QAAO,SAAAmB,GAAI,OAAIA,EAAK7D,aACnC,QACE,OAAO4D,I,uDAIH,IAAD,EACsB/B,KAAKZ,MAA1B6B,EADD,EACCA,SAAUJ,EADX,EACWA,OAEZoB,EAAcjC,KAAK8B,YAAYb,EAAUJ,GAEzCqB,EAAiBjB,EAASJ,QAAO,SAAAc,GAAE,OAAIA,EAAGxD,aAAWgE,OACrDC,EAAYnB,EAASkB,OAASD,EAE9BG,IAAapB,EAASkB,QACxBlB,EAASqB,OAAM,SAAAX,GAAE,OAAIA,EAAGxD,aAG5B,OACE,6BAASG,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,kBAAC,EAAD,CAAWwB,YAAaE,KAAKoB,WAG/B,6BAAS9C,UAAU,QACjB,2BACEC,KAAK,WACLN,GAAG,aACHK,UAAU,aACVE,QAAS6D,EACT5D,SAAUuB,KAAK6B,uBAEjB,2BAAOnD,QAAQ,cAAf,wBACA,kBAAC,EAAD,CACEI,MAAOmD,EACP7D,kBAAmB4B,KAAK5B,kBACxBC,UAAW2B,KAAKwB,cAIlBP,EAASkB,OACT,4BAAQ7D,UAAU,UAChB,0BAAMA,UAAU,cACb8D,EACA,IAFH,cAMA,kBAAC,EAAD,CACExB,eAAgBZ,KAAKY,eACrBC,OAAQA,IAEV,4BACEtC,KAAK,SACLI,QAASqB,KAAKmB,iBACd7C,UAAU,kBACViE,SAAUL,EAAiB,GAAK,YAJlC,oBAZgB,Q,GAjHVhC,aCDlBsC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.42f51a41.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({\n  id, title, completed,\n  onToggleCompleted, onDeleted,\n}) => (\n  <>\n    <li className={completed ? 'completed' : 'view'}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={completed ? 'checked' : ''}\n          className=\"toggle\"\n          id={`todo-${id}`}\n          onChange={onToggleCompleted}\n        />\n        <label htmlFor={`todo-${id}`}>{title}</label>\n        <button type=\"button\" onClick={onDeleted} className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n  </>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool,\n  onToggleCompleted: PropTypes.func.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  completed: false,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, onToggleCompleted, onDeleted }) => {\n  const elements = todos.map(({ id, label, completed }) => (\n    <TodoItem\n      key={id}\n      id={id}\n      title={label}\n      completed={completed}\n      onToggleCompleted={() => onToggleCompleted(id)}\n      onDeleted={() => onDeleted(id)}\n    />\n  ));\n\n  return (\n    <ul className=\"todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    completed: PropTypes.bool,\n  })),\n  onToggleCompleted: PropTypes.func.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [{\n    completed: false,\n  }],\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoInput extends Component {\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (event) => {\n    if (!event.target.value.trim()) {\n      this.setState({ label: '' });\n\n      return;\n    }\n\n    this.setState({ label: event.target.value });\n  };\n\n  handleInputKeyDown = (event) => {\n    if (event.keyCode === 13 && this.state.label !== '') {\n      this.props.onItemAdded(this.state.label);\n      this.setState({ label: '' });\n    }\n  }\n\n  render() {\n    return (\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={this.state.label}\n        onChange={this.onLabelChange}\n        onKeyDown={this.handleInputKeyDown}\n      />\n    );\n  }\n}\n\nTodoInput.propTypes = {\n  onItemAdded: PropTypes.func.isRequired,\n};\n\nexport default TodoInput;\n","const FILTER = {\n  ALL: 'all',\n  ACTIVE: 'active',\n  COMPLETED: 'completed',\n};\n\nconst filters = [\n  {\n    name: FILTER.ALL, href: '#/', label: 'All',\n  },\n  {\n    name: FILTER.ACTIVE, href: '#/active', label: 'Active',\n  },\n  {\n    name: FILTER.COMPLETED, href: '#/completed', label: 'Completed',\n  },\n];\n\nexport const filterUtils = {\n  FILTER,\n  filters,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filterUtils } from '../utils/FilterUtils';\n\nconst TodosFilter = ({ onFilterChange, filter }) => {\n  const links = filterUtils.filters.map(({ name, href, label }) => {\n    const isActive = filter === name;\n    const linkActive = isActive ? 'selected' : '';\n\n    return (\n      <li key={name}>\n        <a\n          href={href}\n          onClick={() => onFilterChange(name)}\n          className={linkActive}\n        >\n          {label}\n        </a>\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"filters\">\n      {links}\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodoList from './components/TodoList';\nimport TodoInput from './components/TodoInput';\nimport { filterUtils } from './utils/FilterUtils';\nimport TodosFilter from './components/TodosFilter';\n\nclass App extends Component {\n  state = {\n    todoData: [],\n    filter: filterUtils.FILTER.ALL,\n  }\n\n  onToggleCompleted = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  onClearCompleted = () => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.filter(todo => !todo.completed),\n    }));\n  }\n\n  addItem = (text) => {\n    const newItem = {\n      id: uuidv4(),\n      label: text,\n      completed: false,\n    };\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newItem];\n\n      return { todoData: newArr };\n    });\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex(el => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\n      return { todoData: newArray };\n    });\n  };\n\n  onToggleAllCompleted =({ target }) => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.map(todo => ({\n        ...todo,\n        completed: target.checked,\n      })),\n    }));\n  }\n\n  filterTodos = (items, filter) => {\n    switch (filter) {\n      case filterUtils.FILTER.ALL:\n        return items;\n      case filterUtils.FILTER.ACTIVE:\n        return items.filter(item => !item.completed);\n      case filterUtils.FILTER.COMPLETED:\n        return items.filter(item => item.completed);\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const { todoData, filter } = this.state;\n\n    const visibleData = this.filterTodos(todoData, filter);\n\n    const completedCount = todoData.filter(el => el.completed).length;\n    const todoCount = todoData.length - completedCount;\n\n    const allChecked = todoData.length\n      ? todoData.every(el => el.completed)\n      : false;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoInput onItemAdded={this.addItem} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={allChecked}\n            onChange={this.onToggleAllCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={visibleData}\n            onToggleCompleted={this.onToggleCompleted}\n            onDeleted={this.deleteItem}\n          />\n        </section>\n\n        {!todoData.length ? '' : (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {todoCount}\n              {' '}\n              items left\n            </span>\n\n            <TodosFilter\n              onFilterChange={this.onFilterChange}\n              filter={filter}\n            />\n            <button\n              type=\"button\"\n              onClick={this.onClearCompleted}\n              className=\"clear-completed\"\n              disabled={completedCount ? '' : 'disabled'}\n            >\n              Clear completed\n            </button>\n          </footer>\n        )}\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}